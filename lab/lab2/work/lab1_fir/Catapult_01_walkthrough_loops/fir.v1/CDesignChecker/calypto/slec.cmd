cd /RAID2/COURSE/asoc/asoc020/Catapult_1/fir.v1/./CDesignChecker
set SLEC_CPC_PROTOCOL 0
set_global message_wrap_at 10000
global env
set env(SLEC_FROM_CATAPULT) 1
set env(SLEC_FROM_CATAPULT_IPC) 1
set cat2slec_args {-cat2slec_work_dir /RAID2/COURSE/asoc/asoc020/Catapult_1/fir.v1/./CDesignChecker -workdir .. -cpc -symbolic_memory_threshold_size 256}
source /RAID2/cad/mentor/Catapult/2023.2/Mgc_home/pkgs/cds_cpc/rls/platform/common/slec/cat2slec.itcl
set_global message_wrap_at 10000
set env(SLEC_FROM_CATAPULT) 1
rename exit exitproc
proc exit {} {}
set Run_Formal_Part_One 1
set Run_Formal_Part_Two 0
source run_design_checker.tcl
# #!/bin/tclsh
# # ----------------------------------------------------------------------------
# # SLEC Flow using RTL Verilog netlist
# #
# #    HLS version: 8.2
# #   SLEC version: SLEC 2023.2
# #
# #   Generated by: asoc020
# # Generated date: Tue Mar 26 16:54:38 CST 2024
# #
# # ----------------------------------------------------------------------------
# 
# # ############################################################################
# # General Settings
# # ############################################################################
# 
# global env
# set MGC_HOME $env(MGC_HOME)
# set SLEC_HOME [get_global __common_path]
# 
# set_global solver_cache_location workdir
# set_global catapult_mem_map_threshold 32
# 
# set _Design_Already_Read [get_variable _Design_Already_Read -default 0]
# if { ! $_Design_Already_Read } {
# 
#     # Options set from Catapult
#     source -verbose -if_exists [get_variable slec_options -default ${testdir}/design_checker_options.tcl]
# }
# # This file is automatically generated by Catapult each time CDesignChecker is
# # is launched from Catapult. Any user-applied edits will be overwritten.
# 
# set ::env(SLEC_GCC_HOME) /RAID2/cad/mentor/Catapult/2023.2/Mgc_home/pkgs/dcs_gcc/usr
# # Property checks
# 
# # add Verification Mode settings
# set_verification_mode -c_property_checks 
# 
# # Clear all settings
# config_property_checks -disable -all
# # Enable rules
# config_property_checks -enable -abr -severity error 
# config_property_checks -enable -abw -severity error 
# config_property_checks -enable -acc -severity warning 
# config_property_checks -enable -acs -severity warning 
# config_property_checks -enable -aic -severity warning 
# config_property_checks -enable -als -severity warning 
# config_property_checks -enable -aob -severity error 
# config_property_checks -enable -apt -severity info 
# config_property_checks -enable -awe -severity warning 
# config_property_checks -enable -cas -severity error 
# config_property_checks -enable -cbu -severity warning 
# config_property_checks -enable -ccc -severity warning 
# config_property_checks -enable -cgr -severity warning 
# config_property_checks -enable -cia -severity warning 
# config_property_checks -enable -cmc -severity info 
# config_property_checks -enable -cns -severity warning 
# config_property_checks -enable -cwb -severity warning 
# config_property_checks -enable -dbz -severity error 
# config_property_checks -enable -diu -severity warning 
# config_property_checks -enable -fvi -severity warning 
# config_property_checks -enable -fxd -severity warning 
# config_property_checks -enable -ise -severity error 
# config_property_checks -enable -lrc -severity info 
# config_property_checks -enable -mdb -severity warning 
# config_property_checks -enable -mxs -severity info 
# config_property_checks -enable -nco -severity warning 
# config_property_checks -enable -osa -severity warning 
# config_property_checks -enable -ovl -severity error 
# config_property_checks -enable -pdd -severity warning 
# config_property_checks -enable -riu -severity warning 
# config_property_checks -enable -rrt -severity error 
# config_property_checks -enable -sat -severity warning 
# config_property_checks -enable -stf -severity info 
# config_property_checks -enable -sud -severity warning 
# config_property_checks -enable -umr -severity error 
# 
# # Symbolic Memory Control
# set_global symbolic_memory_threshold_size 256
# 
# # verification effort
# set_verification_effort -medium
# set_global report_undecided_solver_properties 1
# 
# 
# 
# # ############################################################################
# # Modes
# # ############################################################################
# 
# set Run_Lint_Only [get_variable Run_Lint_Only -default 0]
# set Run_Formal_Part_One [get_variable Run_Formal_Part_One -default 0]
# set Run_Formal_Part_Two [get_variable Run_Formal_Part_Two -default 0]
# 
# if { $Run_Lint_Only + $Run_Formal_Part_One + $Run_Formal_Part_Two > 1 } {
#     error "Multiple run-modes are not allowed. Specify only one of Run_Lint_Only, Run_Formal_Part_One, Run_Formal_Part_Two."
# }
# 
# # ############################################################################
# # Execution Variables
# # ############################################################################
# 
# set Enable_DB_Flow          [get_variable Enable_DB_Flow -default 0]
# set Induction_Depth         [get_variable Induction_Depth -default 1]
# 
# # Default Values
# set Read_DB 0
# set Read_Design 1
# set Write_Design 1
# set Verify 1
# 
# if { ! $Run_Lint_Only && $Enable_DB_Flow && [file exists ${testdir}/design.db] } {
#      set Read_DB 1
# }
# if { $Run_Formal_Part_Two } {
#      set Read_Design 0
# }
# if { $Run_Lint_Only || $Run_Formal_Part_One } {
#      set Write_Design 0
# }
# if { $Run_Lint_Only || $Run_Formal_Part_One } {
#      set Verify 0
# }
# 
# # ############################################################################
# # Read Design
# # ############################################################################
# 
# set_global ceg_ac_channel_handshake_inputs {{input_rdy spec_wrapper::input::rdy}}
# set_global ceg_ac_channel_handshake_outputs {{input_vld spec_wrapper::input::vld}}
# if { [file exist [get_variable constraints_file -default ${testdir}/../../../design_checker_waivers.tcl] ] } {
#      source -verbose [get_variable constraints_file -default ${testdir}/../../../design_checker_waivers.tcl]
# }
# if { $Read_DB } {
# 
#     puts "************************************************************"
#     puts "Reading the spec design from a previously saved SLEC database (.db) file"
#     puts "************************************************************"
#     read_db ${testdir}/design.db
# 
# } else {
# 
#     if { $Read_Design } {
# 
#         if { $Run_Lint_Only } {
#             set_global exit_after_lint_checks true
#         }
# 
#         source -verbose -if_exists [get_variable pre_build_file -default ${testdir}/../../../design_checker_pre_build.tcl]
# 
#         set_global symbolic_memory_threshold_size 256
# 
#         append_global hls_exclude_paths "$MGC_HOME/shared/include, [get_global __install_path]/platform/common/, $MGC_HOME/pkgs/dcs_gcc/"
#         append_global hls_exclude_files "${testdir}/spec_wrapper.cpp"
#         append_global hls_exclude_files "${testdir}/spec_wrapper.h"
#         set_global _lint_scope "fir::run"
# 
#         read_design -spec \
#             -D__x86_64__ \
#             -cxx11 \
#             -I${testdir}/../../../catapult-for-soc-course/lab1_fir/01_walkthrough_loops \
#             -I$MGC_HOME/shared/include \
#             -I[get_global __install_path]/platform/common/slec/cat2slec_files/Adapters_IP \
#             ${testdir}/spec_wrapper.cpp 
# 
#         link_design -spec -top spec_wrapper
#     }
# 
#     if { $Write_Design } {
#         build_db -spec
#         write_db design.db
#     }
# }
# # CDesignChecker Pre-build-design user options
# set _Design_Already_Read 1
# 
# # The following setup is required only for the formal flow.
# if { $Verify } {
# 
# # ############################################################################
# # Setup reset constraints
# # ############################################################################
# 
# set_reset_length -spec -length 1
# 
# set constraint_wf_name [create_waveform -name SPEC_RST -bitwidth 1 {{1 0+}}]
# create_constraint -reset -waveform $constraint_wf_name {spec.rst}
# set constraint_wf_name [create_waveform -name SPEC_RST_OFF -bitwidth 1 {{0+}}]
# create_constraint -waveform $constraint_wf_name {spec.rst}
# 
# # ############################################################################
# # Source user-supplied constraints file
# # ############################################################################
# 
# source -verbose -if_exists [get_variable constraints_file -default ${testdir}/../../../design_checker_constraints.tcl]
# 
# # ############################################################################
# # SLEC Intermediate Maps
# # ############################################################################
# 
# if { [ probe_check_if_spec_var_exists {spec_wrapper::input::rdy} ] } {
#     create_map -intermediate    -induct $Induction_Depth \
#      \
#         -valid [create_constant -impl -value 0] \
#         {spec.spec_wrapper::input::rdy} \
#         [create_constant -impl -value 1]
# }
# 
# # ############################################################################
# # Verification Settings
# # ############################################################################
# 
# verify -mode full_proof
# 
# 
# }
set Run_Formal_Part_One 0
set Run_Formal_Part_Two 1
source run_design_checker.tcl
# #!/bin/tclsh
# # ----------------------------------------------------------------------------
# # SLEC Flow using RTL Verilog netlist
# #
# #    HLS version: 8.2
# #   SLEC version: SLEC 2023.2
# #
# #   Generated by: asoc020
# # Generated date: Tue Mar 26 16:54:38 CST 2024
# #
# # ----------------------------------------------------------------------------
# 
# # ############################################################################
# # General Settings
# # ############################################################################
# 
# global env
# set MGC_HOME $env(MGC_HOME)
# set SLEC_HOME [get_global __common_path]
# 
# set_global solver_cache_location workdir
# set_global catapult_mem_map_threshold 32
# 
# set _Design_Already_Read [get_variable _Design_Already_Read -default 0]
# if { ! $_Design_Already_Read } {
# 
#     # Options set from Catapult
#     source -verbose -if_exists [get_variable slec_options -default ${testdir}/design_checker_options.tcl]
# }
# 
# # ############################################################################
# # Modes
# # ############################################################################
# 
# set Run_Lint_Only [get_variable Run_Lint_Only -default 0]
# set Run_Formal_Part_One [get_variable Run_Formal_Part_One -default 0]
# set Run_Formal_Part_Two [get_variable Run_Formal_Part_Two -default 0]
# 
# if { $Run_Lint_Only + $Run_Formal_Part_One + $Run_Formal_Part_Two > 1 } {
#     error "Multiple run-modes are not allowed. Specify only one of Run_Lint_Only, Run_Formal_Part_One, Run_Formal_Part_Two."
# }
# 
# # ############################################################################
# # Execution Variables
# # ############################################################################
# 
# set Enable_DB_Flow          [get_variable Enable_DB_Flow -default 0]
# set Induction_Depth         [get_variable Induction_Depth -default 1]
# 
# # Default Values
# set Read_DB 0
# set Read_Design 1
# set Write_Design 1
# set Verify 1
# 
# if { ! $Run_Lint_Only && $Enable_DB_Flow && [file exists ${testdir}/design.db] } {
#      set Read_DB 1
# }
# if { $Run_Formal_Part_Two } {
#      set Read_Design 0
# }
# if { $Run_Lint_Only || $Run_Formal_Part_One } {
#      set Write_Design 0
# }
# if { $Run_Lint_Only || $Run_Formal_Part_One } {
#      set Verify 0
# }
# 
# # ############################################################################
# # Read Design
# # ############################################################################
# 
# set_global ceg_ac_channel_handshake_inputs {{input_rdy spec_wrapper::input::rdy}}
# set_global ceg_ac_channel_handshake_outputs {{input_vld spec_wrapper::input::vld}}
# if { [file exist [get_variable constraints_file -default ${testdir}/../../../design_checker_waivers.tcl] ] } {
#      source -verbose [get_variable constraints_file -default ${testdir}/../../../design_checker_waivers.tcl]
# }
# if { $Read_DB } {
# 
#     puts "************************************************************"
#     puts "Reading the spec design from a previously saved SLEC database (.db) file"
#     puts "************************************************************"
#     read_db ${testdir}/design.db
# 
# } else {
# 
#     if { $Read_Design } {
# 
#         if { $Run_Lint_Only } {
#             set_global exit_after_lint_checks true
#         }
# 
#         source -verbose -if_exists [get_variable pre_build_file -default ${testdir}/../../../design_checker_pre_build.tcl]
# 
#         set_global symbolic_memory_threshold_size 256
# 
#         append_global hls_exclude_paths "$MGC_HOME/shared/include, [get_global __install_path]/platform/common/, $MGC_HOME/pkgs/dcs_gcc/"
#         append_global hls_exclude_files "${testdir}/spec_wrapper.cpp"
#         append_global hls_exclude_files "${testdir}/spec_wrapper.h"
#         set_global _lint_scope "fir::run"
# 
#         read_design -spec \
#             -D__x86_64__ \
#             -cxx11 \
#             -I${testdir}/../../../catapult-for-soc-course/lab1_fir/01_walkthrough_loops \
#             -I$MGC_HOME/shared/include \
#             -I[get_global __install_path]/platform/common/slec/cat2slec_files/Adapters_IP \
#             ${testdir}/spec_wrapper.cpp 
# 
#         link_design -spec -top spec_wrapper
#     }
# 
#     if { $Write_Design } {
#         build_db -spec
#         write_db design.db
#     }
# }
# set _Design_Already_Read 1
# 
# # The following setup is required only for the formal flow.
# if { $Verify } {
# 
# # ############################################################################
# # Setup reset constraints
# # ############################################################################
# 
# set_reset_length -spec -length 1
# 
# set constraint_wf_name [create_waveform -name SPEC_RST -bitwidth 1 {{1 0+}}]
# create_constraint -reset -waveform $constraint_wf_name {spec.rst}
# set constraint_wf_name [create_waveform -name SPEC_RST_OFF -bitwidth 1 {{0+}}]
# create_constraint -waveform $constraint_wf_name {spec.rst}
# 
# # ############################################################################
# # Source user-supplied constraints file
# # ############################################################################
# 
# source -verbose -if_exists [get_variable constraints_file -default ${testdir}/../../../design_checker_constraints.tcl]
# 
# # ############################################################################
# # SLEC Intermediate Maps
# # ############################################################################
# 
# if { [ probe_check_if_spec_var_exists {spec_wrapper::input::rdy} ] } {
#     create_map -intermediate    -induct $Induction_Depth \
#      \
#         -valid [create_constant -impl -value 0] \
#         {spec.spec_wrapper::input::rdy} \
#         [create_constant -impl -value 1]
# }
# 
# # ############################################################################
# # Verification Settings
# # ############################################################################
# 
# verify -mode full_proof
# 
# 
# }
# # CDesignChecker user constraints
